Model Simplification
********************

Using the model simplification options, the modeled time system can be reduced so
that not all time steps are considered with the modeling. Such a simplification
allows shorter runtimes, but may lead to a reduction in the quality of the results [1].


Time Series Preparation
=======================

Using the timeseries preparation-options, the modeled time system can be reduced
so that not all time steps are considered with the modeling. Such a simplification
allows shorter runtimes, but may lead to a reduction in the quality of the results [1].

.. warning::

	All time series simplifications can currently only be applied at an input time resolution of hours with 8760 time steps (i.e. one whole year). The algorithm described in the following sub-sections can be applied. Depending on the simplification applied, further adjustments to the energy system area automatically carried out.

**Adjustment of time series of non-divisible length:**
"For a time series' adjustments, the simplification factor should ideally be divisible
by the length of the given time series without remainder. For example, out of 365 days,
every fifth day can be selected via slicing without any problems (365/5=73), but every
tenth day results in a remainder (365/10=36.5). In order to be able to simplify the time
series correctly, in such cases the given time series is shortened so far that the
calculation is correct. For slicing with every tenth day, for example, the time series
would be shortened to 360 days (360/10=36). In sampling methods, the selected periods
are strung together and merged into a new time series. The individual sample periods are
partially assigned new time stamps" [1].

**Variable cost factor:**
"To ensure the correct consideration of the relationship between variable and periodical
(annual) costs in the case of shortened time series, variable costs are multiplied by the
variable cost factor" [1]:

    `variable cost factor = original number of timesteps / new number of timesteps`
  
k-means / k-medoids
-------------------
"The k-clustering algorithm divides a time series into a given number k of clusters so that
the squared deviation of the cluster centers of gravity is minimal. The procedure is well
described by Green et al. [2]. k-means-clustering as well as k-medoids-clustering are carried
out using the python libraries 'scikit-learn', respectively 'scikit-learn-extra'." [1]
Different cluster criteria (1. temperature, 2. solar radiation, 3. electricity demand) as
well as different periods (days and weeks) can be applied. To apply the criterion
"electricity demand", a column "el_demand_sum" must be inserted in the
`model_definition.xlsx-file in the weather-data sheet <https://spreadsheet-energy-system-model-generator.readthedocs.io/en/latest/02.02.00_application.html#weather-data>`_,
which defines the reference consumption.

averaging
---------
"In averaging, successive time periods (e.g. two consecutive days) are averaged and combined
into one segment" [1]. Values of different numbers of days and weeks can be applied.

slicing A/B
-----------
"In slicing every *n*-th period is selected, e.g. every second day, and subsequently recombined
to a reduced time series." [1] Slicing A: every n-th period is **selected and considered**
within the modeling. Slicing B: every n-th period is **deleted and removed** from the modeling.

downsampling A/B
----------------
"The temporal resolution of an entire time series is changed. For example, the resolution can
be changed from a 1-hourly to a 3-hourly temporal resolution." [1] "On the one hand it allows
the *consideration* of every *n*-th hour [downsampling A]. Thereby the number of modeled time
steps must be at least halved (*n*=2). To allow a smaller time series reduction, the possibility
to *remove* every *n*-th hour was also implemented [downsampling B]" [1].

heuristic selection
-------------------
"In heuristic selection, representative time periods of a time series are selected from certain
selection criteria" [1] "Based on the approach of Poncelet et al. heuristic selection
scheme[s are] carried out" [1]

Available selection schemes:

+--------+---------+-------------------------------+--------------+------------------+---------------------+
| index  | period  | criterion                     | temperature  | solar radiation  | electricity demand  |
+========+=========+===============================+==============+==================+=====================+
| 1      | 2       | year                          | hp, lv       | --               | --                  |
+--------+---------+-------------------------------+--------------+------------------+---------------------+
| 2      | 4       | year                          | hp, lv       | ha, la           | --                  |
+--------+---------+-------------------------------+--------------+------------------+---------------------+
| 3      | 8       | summer, winter                | hp, lv       | ha, la           | --                  |
+--------+---------+-------------------------------+--------------+------------------+---------------------+
| 4      | 16      | winter, spring, summer, fall  | hp, lv       | ha, la           | --                  |
+--------+---------+-------------------------------+--------------+------------------+---------------------+
| 5      | 24      | winter, spring, summer, fall  | hp, lv       | ha, la           | ha, la              |
+--------+---------+-------------------------------+--------------+------------------+---------------------+

Acronyms: hp=highest peak, lv=lowest valley, ha=highest average, la=lowest average


Further schemes can be added as described here: https://spreadsheet-energy-system-model-generator.readthedocs.io/en/latest/02.02.05_technical_data.rst#heuristic-selection-patterns


random sampling
---------------
"In random sampling, a predetermined number of random periods (e.g. days or weeks) are selected
and used as representatives." [1] "The python library 'random' is utilized. To ensure
reproducability, a 'seed' is defined, so that with each run the same random periods will be
selected. Furthermore, a random time series of e.g. 10 periods thereby automatically makes up
10 periods of a random time series of, e.g. 20 periods" [1]
  

Pre-Modeling
============
The pre-modeling function splits the model into two model-runs. In a temporally simplified pre-model,
potentially irrelevant investment decisions are identified and removed from the main model run
("technical pre-selection", see [1]). Optionally, the investment boundaries for the investment
decisions remaining in the model can be adjusted with the freely selectable
_investment_boundary_factor_ ("tightening of technical boundaries", see [1]). The pre-run and main
run are automatically executed one after the other.
